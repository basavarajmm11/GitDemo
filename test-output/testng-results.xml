<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="6" total="12" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="99" started-at="2020-08-13T12:00:17Z" finished-at="2020-08-13T12:00:18Z">
    <groups>
      <group name="Smoke">
        <method signature="Test1.demo()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="demo" class="TestNg_Tutorial.Test1"/>
        <method signature="Test2.Third()[pri:0, instance:TestNg_Tutorial.Test2@1fdc050]" name="Third" class="TestNg_Tutorial.Test2"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="CarLoan" duration-ms="55" started-at="2020-08-13T12:00:17Z" finished-at="2020-08-13T12:00:18Z">
      <class name="TestNg_Tutorial.Test3">
        <test-method status="PASS" signature="Beforesuitt()[pri:0, instance:TestNg_Tutorial.Test3@1deb50e]" name="Beforesuitt" is-config="true" duration-ms="9" started-at="2020-08-13T17:30:17Z" finished-at="2020-08-13T17:30:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforesuitt -->
        <test-method status="PASS" signature="webLoginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:TestNg_Tutorial.Test3@1deb50e]" name="webLoginCarLoan" duration-ms="8" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.googlecar.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[www.apicar.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method status="PASS" signature="loginAPICarLoan()[pri:0, instance:TestNg_Tutorial.Test3@1deb50e]" name="loginAPICarLoan" duration-ms="3" started-at="2020-08-13T17:30:18Z" depends-on-methods="TestNg_Tutorial.Test3.webLoginCarLoan" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPICarLoan -->
        <test-method status="PASS" signature="aftersuitt()[pri:0, instance:TestNg_Tutorial.Test3@1deb50e]" name="aftersuitt" is-config="true" duration-ms="0" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuitt -->
      </class> <!-- TestNg_Tutorial.Test3 -->
    </test> <!-- CarLoan -->
    <test name="PersonalLoan" duration-ms="99" started-at="2020-08-13T12:00:17Z" finished-at="2020-08-13T12:00:18Z">
      <class name="TestNg_Tutorial.Test2">
        <test-method status="PASS" signature="Third()[pri:0, instance:TestNg_Tutorial.Test2@1fdc050]" name="Third" duration-ms="11" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Third -->
      </class> <!-- TestNg_Tutorial.Test2 -->
      <class name="TestNg_Tutorial.Test4">
        <test-method status="PASS" signature="mobileLoginHomeLoan(java.lang.String, java.lang.String)[pri:0, instance:TestNg_Tutorial.Test4@1ce4f0a]" name="mobileLoginHomeLoan" duration-ms="5" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[www.api.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
      </class> <!-- TestNg_Tutorial.Test4 -->
      <class name="TestNg_Tutorial.Test1">
        <test-method status="PASS" signature="Beforetest()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="Beforetest" is-config="true" duration-ms="2" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforetest -->
        <test-method status="PASS" signature="beforecls()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="beforecls" is-config="true" duration-ms="1" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforecls -->
        <test-method status="PASS" signature="beforemthd()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="beforemthd" is-config="true" duration-ms="0" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemthd -->
        <test-method status="PASS" signature="demo()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="demo" duration-ms="13" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="PASS" signature="beforemthd()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="beforemthd" is-config="true" duration-ms="0" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemthd -->
        <test-method status="FAIL" signature="secondMethod()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="secondMethod" duration-ms="7" started-at="2020-08-13T17:30:18Z" depends-on-methods="TestNg_Tutorial.Test1.demo" finished-at="2020-08-13T17:30:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at TestNg_Tutorial.Test1.secondMethod(Test1.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondMethod -->
        <test-method status="PASS" signature="aftermthd()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="aftermthd" is-config="true" duration-ms="1" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermthd -->
        <test-method status="PASS" signature="aftermthd()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="aftermthd" is-config="true" duration-ms="1" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermthd -->
        <test-method status="PASS" signature="afterls()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="afterls" is-config="true" duration-ms="0" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterls -->
        <test-method status="PASS" signature="Aftertest()[pri:0, instance:TestNg_Tutorial.Test1@d80b78]" name="Aftertest" is-config="true" duration-ms="1" started-at="2020-08-13T17:30:18Z" finished-at="2020-08-13T17:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftertest -->
      </class> <!-- TestNg_Tutorial.Test1 -->
    </test> <!-- PersonalLoan -->
  </suite> <!-- Suite -->
</testng-results>
